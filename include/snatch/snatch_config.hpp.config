#ifndef SNATCH_CONFIG_HPP
#define SNATCH_CONFIG_HPP

// These are defined from build-time configuration.
// clang-format off
#define SNATCH_VERSION "${PROJECT_VERSION}"
#define SNATCH_FULL_VERSION "${SNATCH_FULL_VERSION}"
#define SNATCH_VERSION_MAJOR ${PROJECT_VERSION_MAJOR}
#define SNATCH_VERSION_MINOR ${PROJECT_VERSION_MINOR}
#define SNATCH_VERSION_PATCH ${PROJECT_VERSION_PATCH}

#if !defined(SNATCH_MAX_TEST_CASES)
#    define SNATCH_MAX_TEST_CASES ${SNATCH_MAX_TEST_CASES}
#endif
#if !defined(SNATCH_MAX_NESTED_SECTIONS)
#    define SNATCH_MAX_NESTED_SECTIONS ${SNATCH_MAX_NESTED_SECTIONS}
#endif
#if !defined(SNATCH_MAX_EXPR_LENGTH)
#    define SNATCH_MAX_EXPR_LENGTH ${SNATCH_MAX_EXPR_LENGTH}
#endif
#if !defined(SNATCH_MAX_MESSAGE_LENGTH)
#    define SNATCH_MAX_MESSAGE_LENGTH ${SNATCH_MAX_MESSAGE_LENGTH}
#endif
#if !defined(SNATCH_MAX_TEST_NAME_LENGTH)
#    define SNATCH_MAX_TEST_NAME_LENGTH ${SNATCH_MAX_TEST_NAME_LENGTH}
#endif
#if !defined(SNATCH_MAX_CAPTURES)
#    define SNATCH_MAX_CAPTURES ${SNATCH_MAX_CAPTURES}
#endif
#if !defined(SNATCH_MAX_CAPTURE_LENGTH)
#    define SNATCH_MAX_CAPTURE_LENGTH ${SNATCH_MAX_CAPTURE_LENGTH}
#endif
#if !defined(SNATCH_MAX_UNIQUE_TAGS)
#    define SNATCH_MAX_UNIQUE_TAGS ${SNATCH_MAX_UNIQUE_TAGS}
#endif
#if !defined(SNATCH_MAX_COMMAND_LINE_ARGS)
#    define SNATCH_MAX_COMMAND_LINE_ARGS ${SNATCH_MAX_COMMAND_LINE_ARGS}
#endif
#if !defined(SNATCH_DEFINE_MAIN)
#    cmakedefine01 SNATCH_DEFINE_MAIN
#endif
#if !defined(SNATCH_WITH_EXCEPTIONS)
#    cmakedefine01 SNATCH_WITH_EXCEPTIONS
#endif
#if !defined(SNATCH_WITH_TIMINGS)
#    cmakedefine01 SNATCH_WITH_TIMINGS
#endif
#if !defined(SNATCH_WITH_SHORTHAND_MACROS)
#    cmakedefine01 SNATCH_WITH_SHORTHAND_MACROS
#endif
#if !defined(SNATCH_DEFAULT_WITH_COLOR)
#    cmakedefine01 SNATCH_DEFAULT_WITH_COLOR
#endif
// clang-format on

#if defined(_MSC_VER)
#    if defined(_KERNEL_MODE) || (defined(_HAS_EXCEPTIONS) && !_HAS_EXCEPTIONS)
#        define SNATCH_EXCEPTIONS_NOT_AVAILABLE
#    endif
#elif defined(__clang__) || defined(__GNUC__)
#    if !defined(__EXCEPTIONS)
#        define SNATCH_EXCEPTIONS_NOT_AVAILABLE
#    endif
#endif

#if defined(SNATCH_EXCEPTIONS_NOT_AVAILABLE)
#    undef SNATCH_WITH_EXCEPTIONS
#    define SNATCH_WITH_EXCEPTIONS 0
#endif

#endif
